/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.finalproject;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ivan
 */
public class Admin extends javax.swing.JFrame {
    Connect con;
    Staff staff;
    DefaultTableModel staffTable;
    DefaultTableModel roomTable;
    DefaultTableModel doctorTable;
    DefaultTableModel specialtyTable;
    
    public Admin() {
        
    }
    
    public Admin(Staff staff) {
        initComponents();
        setTitle("Admin Page");
        setLocationRelativeTo(null);
        this.staff = staff;
        con = new Connect();
        staffTable = (DefaultTableModel) tblStaff.getModel();
        doctorTable = (DefaultTableModel) tblDoctor.getModel();
        roomTable = (DefaultTableModel) tblRoom.getModel();
        specialtyTable = (DefaultTableModel) tblSpecialties.getModel();
        
        tfHidden1.setVisible(false);
        tfHidden2.setVisible(false);
        tfHidden3.setVisible(false);
        tfHidden4.setVisible(false);
        txtHidden1.setVisible(false);
        txtHidden2.setVisible(false);
        txtHidden3.setVisible(false);
        txtHidden4.setVisible(false);
        
        tfHiddenD1.setVisible(false);
        tfHiddenD2.setVisible(false);
        tfHiddenD3.setVisible(false);
        tfHiddenD4.setVisible(false);
        tfHiddenD5.setVisible(false);
        txtHiddenD1.setVisible(false);
        txtHiddenD2.setVisible(false);
        txtHiddenD3.setVisible(false);
        txtHiddenD4.setVisible(false);
        txtHiddenD5.setVisible(false);
        
        tfHiddenR1.setVisible(false);
        tfHiddenR2.setVisible(false);
        tfHiddenR3.setVisible(false);
        tfHiddenR4.setVisible(false);
        txtHiddenR1.setVisible(false);
        txtHiddenR2.setVisible(false);
        txtHiddenR3.setVisible(false);
        txtHiddenR4.setVisible(false);
        
        //Delete Doctor's Specialty I think is not possible
        btnDeleteDoctor1.setVisible(false);
        
        loadStaff();
        loadRooms();
        loadDoctors();
    }
    
    private void loadStaff() {
        ArrayList<Staff> staffs = con.getStaffs();
        staffTable.setRowCount(0);
        for(Staff s : staffs){
            String data[]={s.getEmployeeID(), s.getFirstname(), s.getMiddlename(), s.getLastname(), s.getRole()};
            staffTable.addRow(data);
        }
    }
    
    private void loadRooms() {
        ArrayList<Room> rooms = con.getRooms();
        roomTable.setRowCount(0);
        for(Room r : rooms){
            String data[]={Integer.toString(r.getRoomNumber()), Integer.toString(r.getCapacity()), r.getType(), Double.toString(r.getRate())};
            roomTable.addRow(data);
        }
    }
    
    private void loadDoctors() {
        ArrayList<Doctor> doctors = con.getDoctors();
        doctorTable.setRowCount(0);
        
        for(Doctor d : doctors){
            String data[]={d.getEmployeeID(), d.getFirstname(), d.getMiddlename(), d.getLastname(), Double.toString(d.getRate())};
            doctorTable.addRow(data);
        }
    }
    
    private void loadSpecialties() {
        ArrayList<Doctor> doctors = con.getSpecialties();
        if(doctors.size() != 0) {
          specialtyTable.setRowCount(0);
        
            for(Doctor d : doctors){
                String data[]={d.getEmployeeID(), d.getFirstname(), d.getMiddlename(), d.getLastname(), d.getSpecialty()};
                specialtyTable.addRow(data);
            }  
        } else {
            JOptionPane.showMessageDialog(null, "No Specialties", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnStaff = new javax.swing.JButton();
        btnDoctor = new javax.swing.JButton();
        btnSignOut = new javax.swing.JButton();
        btnRoom = new javax.swing.JButton();
        btnSpecialties = new javax.swing.JButton();
        btnChangePassword = new javax.swing.JButton();
        pnlCardLayout = new javax.swing.JPanel();
        pnlStaff = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAddStaff = new javax.swing.JButton();
        btnDeleteStaff = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        btnUpdateStaff = new javax.swing.JButton();
        btnResetPassword = new javax.swing.JButton();
        tfHidden1 = new javax.swing.JTextField();
        tfHidden2 = new javax.swing.JTextField();
        tfHidden3 = new javax.swing.JTextField();
        tfHidden4 = new javax.swing.JTextField();
        txtHidden1 = new javax.swing.JLabel();
        txtHidden2 = new javax.swing.JLabel();
        txtHidden3 = new javax.swing.JLabel();
        txtHidden4 = new javax.swing.JLabel();
        pnlRoom = new javax.swing.JPanel();
        lblRoom = new javax.swing.JLabel();
        btnAddRoom = new javax.swing.JButton();
        btnUpdateRoom = new javax.swing.JButton();
        btnDeleteRoom = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        txtHiddenR1 = new javax.swing.JLabel();
        tfHiddenR1 = new javax.swing.JTextField();
        txtHiddenR2 = new javax.swing.JLabel();
        tfHiddenR2 = new javax.swing.JTextField();
        txtHiddenR3 = new javax.swing.JLabel();
        tfHiddenR3 = new javax.swing.JTextField();
        txtHiddenR4 = new javax.swing.JLabel();
        tfHiddenR4 = new javax.swing.JTextField();
        pnlDoctor = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtHiddenD2 = new javax.swing.JLabel();
        btnDeleteDoctor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        txtHiddenD4 = new javax.swing.JLabel();
        btnUpdateDoctor = new javax.swing.JButton();
        tfHiddenD1 = new javax.swing.JTextField();
        tfHiddenD2 = new javax.swing.JTextField();
        tfHiddenD4 = new javax.swing.JTextField();
        tfHiddenD3 = new javax.swing.JTextField();
        txtHiddenD1 = new javax.swing.JLabel();
        btnAddDoctor = new javax.swing.JButton();
        txtHiddenD5 = new javax.swing.JLabel();
        tfHiddenD5 = new javax.swing.JTextField();
        txtHiddenD3 = new javax.swing.JLabel();
        pnlAddStaff = new javax.swing.JPanel();
        lblAddStaff = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfMiddleName = new javax.swing.JTextField();
        tfLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnCreateStaff = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        pnlAddDoctor = new javax.swing.JPanel();
        lblAddStaff1 = new javax.swing.JLabel();
        tfDoctorFirstName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfDoctorMiddleName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfDoctorLastName = new javax.swing.JTextField();
        btnCreateDoctor = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        tfDoctorRate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pnlSpecialties = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtS2 = new javax.swing.JLabel();
        btnDeleteDoctor1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblSpecialties = new javax.swing.JTable();
        tfS1 = new javax.swing.JTextField();
        tfS2 = new javax.swing.JTextField();
        txtS1 = new javax.swing.JLabel();
        btnAddSpecialties = new javax.swing.JButton();
        pnlAddRoom = new javax.swing.JPanel();
        btnBacktoRoom = new javax.swing.JButton();
        lblAddRoom = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfRoomNumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfRoomType = new javax.swing.JTextField();
        btnCreateRoom = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tfRoomCapacity = new javax.swing.JTextField();
        tfRoomRate = new javax.swing.JTextField();
        pnlChangePassword = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        pfEnterPassword = new javax.swing.JPasswordField();
        jLabel19 = new javax.swing.JLabel();
        pfNewPassword1 = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        pfConfirmPassword1 = new javax.swing.JPasswordField();
        btnChange = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(750, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(750, 550));

        jPanel1.setBackground(new java.awt.Color(73, 57, 121));
        jPanel1.setMaximumSize(new java.awt.Dimension(200, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 550));

        btnStaff.setBackground(new java.awt.Color(73, 57, 121));
        btnStaff.setForeground(new java.awt.Color(255, 255, 255));
        btnStaff.setText("Staff");
        btnStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStaffActionPerformed(evt);
            }
        });

        btnDoctor.setBackground(new java.awt.Color(73, 57, 121));
        btnDoctor.setForeground(new java.awt.Color(255, 255, 255));
        btnDoctor.setText("Doctor");
        btnDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorActionPerformed(evt);
            }
        });

        btnSignOut.setBackground(new java.awt.Color(73, 57, 121));
        btnSignOut.setForeground(new java.awt.Color(255, 255, 255));
        btnSignOut.setText("Sign out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });

        btnRoom.setBackground(new java.awt.Color(73, 57, 121));
        btnRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnRoom.setText("Room");
        btnRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoomActionPerformed(evt);
            }
        });

        btnSpecialties.setBackground(new java.awt.Color(73, 57, 121));
        btnSpecialties.setForeground(new java.awt.Color(255, 255, 255));
        btnSpecialties.setText("Specialties");
        btnSpecialties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpecialtiesActionPerformed(evt);
            }
        });

        btnChangePassword.setBackground(new java.awt.Color(73, 57, 121));
        btnChangePassword.setForeground(new java.awt.Color(255, 255, 255));
        btnChangePassword.setText("Change Password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSpecialties, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnSpecialties, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(btnChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnSignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pnlCardLayout.setLayout(new java.awt.CardLayout());

        pnlStaff.setBackground(new java.awt.Color(254, 251, 245));
        pnlStaff.setMaximumSize(new java.awt.Dimension(550, 500));
        pnlStaff.setMinimumSize(new java.awt.Dimension(550, 500));
        pnlStaff.setPreferredSize(new java.awt.Dimension(550, 500));
        pnlStaff.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Staff");
        pnlStaff.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 10, -1, 24));

        btnAddStaff.setBackground(new java.awt.Color(114, 103, 194));
        btnAddStaff.setText("Add Staff");
        btnAddStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStaffActionPerformed(evt);
            }
        });
        pnlStaff.add(btnAddStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 282, 200, 30));

        btnDeleteStaff.setBackground(new java.awt.Color(114, 103, 194));
        btnDeleteStaff.setText("Delete Staff");
        btnDeleteStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStaffActionPerformed(evt);
            }
        });
        pnlStaff.add(btnDeleteStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 384, 200, 30));

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Middle Name", "Last Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStaff.getTableHeader().setReorderingAllowed(false);
        tblStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStaffMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblStaff);
        if (tblStaff.getColumnModel().getColumnCount() > 0) {
            tblStaff.getColumnModel().getColumn(0).setResizable(false);
            tblStaff.getColumnModel().getColumn(1).setResizable(false);
            tblStaff.getColumnModel().getColumn(2).setResizable(false);
            tblStaff.getColumnModel().getColumn(3).setResizable(false);
            tblStaff.getColumnModel().getColumn(4).setResizable(false);
        }

        pnlStaff.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 46, 485, 215));

        btnUpdateStaff.setBackground(new java.awt.Color(114, 103, 194));
        btnUpdateStaff.setText("Update Staff");
        btnUpdateStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStaffActionPerformed(evt);
            }
        });
        pnlStaff.add(btnUpdateStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 333, 200, 30));

        btnResetPassword.setBackground(new java.awt.Color(114, 103, 194));
        btnResetPassword.setText("Reset Password");
        btnResetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordActionPerformed(evt);
            }
        });
        pnlStaff.add(btnResetPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 435, 200, 30));
        pnlStaff.add(tfHidden1, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 281, 156, 30));
        pnlStaff.add(tfHidden2, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 332, 156, 30));
        pnlStaff.add(tfHidden3, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 434, 156, 30));
        pnlStaff.add(tfHidden4, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 383, 156, 30));

        txtHidden1.setText("Employee ID");
        pnlStaff.add(txtHidden1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 73, 30));

        txtHidden2.setText("First Name");
        pnlStaff.add(txtHidden2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, 73, 30));

        txtHidden3.setText("Middle Name");
        pnlStaff.add(txtHidden3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, -1, 30));

        txtHidden4.setText("Last Name");
        pnlStaff.add(txtHidden4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 73, -1));

        pnlCardLayout.add(pnlStaff, "card2");

        pnlRoom.setBackground(new java.awt.Color(254, 251, 245));
        pnlRoom.setMaximumSize(new java.awt.Dimension(550, 550));
        pnlRoom.setMinimumSize(new java.awt.Dimension(550, 550));
        pnlRoom.setPreferredSize(new java.awt.Dimension(550, 550));

        lblRoom.setText("Room");

        btnAddRoom.setBackground(new java.awt.Color(114, 103, 194));
        btnAddRoom.setText("Add Room");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnUpdateRoom.setBackground(new java.awt.Color(114, 103, 194));
        btnUpdateRoom.setText("Update Room");
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });

        btnDeleteRoom.setBackground(new java.awt.Color(114, 103, 194));
        btnDeleteRoom.setText("Delete Room");
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoomActionPerformed(evt);
            }
        });

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Capacity", "Type", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRoom.getTableHeader().setReorderingAllowed(false);
        tblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblRoom);
        if (tblRoom.getColumnModel().getColumnCount() > 0) {
            tblRoom.getColumnModel().getColumn(0).setResizable(false);
            tblRoom.getColumnModel().getColumn(1).setResizable(false);
            tblRoom.getColumnModel().getColumn(2).setResizable(false);
            tblRoom.getColumnModel().getColumn(3).setResizable(false);
        }

        txtHiddenR1.setText("Room Number");

        txtHiddenR2.setText("Capacity");

        txtHiddenR3.setText("Type");

        txtHiddenR4.setText("Rate");

        tfHiddenR4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHiddenR4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRoomLayout = new javax.swing.GroupLayout(pnlRoom);
        pnlRoom.setLayout(pnlRoomLayout);
        pnlRoomLayout.setHorizontalGroup(
            pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRoomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
            .addGroup(pnlRoomLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRoomLayout.createSequentialGroup()
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRoomLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(txtHiddenR4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfHiddenR4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlRoomLayout.createSequentialGroup()
                                .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlRoomLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHiddenR3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRoomLayout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(txtHiddenR2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(tfHiddenR2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlRoomLayout.createSequentialGroup()
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRoomLayout.createSequentialGroup()
                                .addComponent(txtHiddenR1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfHiddenR3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHiddenR1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        pnlRoomLayout.setVerticalGroup(
            pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblRoom)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRoomLayout.createSequentialGroup()
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHiddenR1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfHiddenR1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfHiddenR2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHiddenR2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfHiddenR3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHiddenR3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlRoomLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(tfHiddenR4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlRoomLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtHiddenR4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnlRoomLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnUpdateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlCardLayout.add(pnlRoom, "card3");

        pnlDoctor.setBackground(new java.awt.Color(254, 251, 245));
        pnlDoctor.setMaximumSize(new java.awt.Dimension(550, 550));
        pnlDoctor.setMinimumSize(new java.awt.Dimension(550, 550));
        pnlDoctor.setPreferredSize(new java.awt.Dimension(550, 550));

        jLabel3.setText("Doctors");

        txtHiddenD2.setText("First Name");

        btnDeleteDoctor.setBackground(new java.awt.Color(114, 103, 194));
        btnDeleteDoctor.setText("Delete Doctor");
        btnDeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctorActionPerformed(evt);
            }
        });

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Middle Name", "Last Name", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoctor.getTableHeader().setReorderingAllowed(false);
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDoctor);
        if (tblDoctor.getColumnModel().getColumnCount() > 0) {
            tblDoctor.getColumnModel().getColumn(0).setResizable(false);
            tblDoctor.getColumnModel().getColumn(1).setResizable(false);
            tblDoctor.getColumnModel().getColumn(2).setResizable(false);
            tblDoctor.getColumnModel().getColumn(3).setResizable(false);
            tblDoctor.getColumnModel().getColumn(4).setResizable(false);
        }

        txtHiddenD4.setText("Last Name");

        btnUpdateDoctor.setBackground(new java.awt.Color(114, 103, 194));
        btnUpdateDoctor.setText("Update Doctor");
        btnUpdateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDoctorActionPerformed(evt);
            }
        });

        txtHiddenD1.setText("Employee ID");

        btnAddDoctor.setBackground(new java.awt.Color(114, 103, 194));
        btnAddDoctor.setText("Add Doctor");
        btnAddDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDoctorActionPerformed(evt);
            }
        });

        txtHiddenD5.setText("Rate");

        txtHiddenD3.setText("Middle Name");

        javax.swing.GroupLayout pnlDoctorLayout = new javax.swing.GroupLayout(pnlDoctor);
        pnlDoctor.setLayout(pnlDoctorLayout);
        pnlDoctorLayout.setHorizontalGroup(
            pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoctorLayout.createSequentialGroup()
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDoctorLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlDoctorLayout.createSequentialGroup()
                                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtHiddenD5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlDoctorLayout.createSequentialGroup()
                                            .addComponent(btnAddDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(31, 31, 31)
                                            .addComponent(txtHiddenD1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlDoctorLayout.createSequentialGroup()
                                            .addComponent(btnUpdateDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtHiddenD2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlDoctorLayout.createSequentialGroup()
                                            .addComponent(btnDeleteDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtHiddenD3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtHiddenD4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfHiddenD1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHiddenD2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHiddenD3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHiddenD4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHiddenD5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnlDoctorLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel3)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        pnlDoctorLayout.setVerticalGroup(
            pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoctorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHiddenD1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfHiddenD1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHiddenD2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHiddenD2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHiddenD3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHiddenD3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHiddenD4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHiddenD4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(pnlDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHiddenD5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfHiddenD5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlCardLayout.add(pnlDoctor, "card4");

        pnlAddStaff.setBackground(new java.awt.Color(254, 251, 245));

        lblAddStaff.setText("Add Staff");

        jLabel4.setText("First Name");

        jLabel5.setText("Middle Name");

        jLabel6.setText("Last Name");

        btnCreateStaff.setBackground(new java.awt.Color(114, 103, 194));
        btnCreateStaff.setText("Create Staff");
        btnCreateStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateStaffActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(114, 103, 194));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddStaffLayout = new javax.swing.GroupLayout(pnlAddStaff);
        pnlAddStaff.setLayout(pnlAddStaffLayout);
        pnlAddStaffLayout.setHorizontalGroup(
            pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddStaffLayout.createSequentialGroup()
                .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddStaffLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfLastName)
                            .addComponent(tfFirstName)
                            .addComponent(tfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAddStaffLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCreateStaff)))
                    .addGroup(pnlAddStaffLayout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(lblAddStaff)))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        pnlAddStaffLayout.setVerticalGroup(
            pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddStaffLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblAddStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(pnlAddStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(36, 36, 36)
                .addComponent(btnCreateStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        pnlCardLayout.add(pnlAddStaff, "card5");

        pnlAddDoctor.setBackground(new java.awt.Color(254, 251, 245));
        pnlAddDoctor.setPreferredSize(new java.awt.Dimension(550, 550));

        lblAddStaff1.setText("Add Doctor");

        jLabel7.setText("First Name");

        jLabel10.setText("Middle Name");

        jLabel11.setText("Last Name");

        btnCreateDoctor.setText("Create Doctor");
        btnCreateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDoctorActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Rate");

        javax.swing.GroupLayout pnlAddDoctorLayout = new javax.swing.GroupLayout(pnlAddDoctor);
        pnlAddDoctor.setLayout(pnlAddDoctorLayout);
        pnlAddDoctorLayout.setHorizontalGroup(
            pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddDoctorLayout.createSequentialGroup()
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddDoctorLayout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(lblAddStaff1))
                    .addGroup(pnlAddDoctorLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfDoctorLastName)
                            .addComponent(tfDoctorFirstName)
                            .addComponent(tfDoctorMiddleName)
                            .addComponent(tfDoctorRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(138, 138, 138))
            .addGroup(pnlAddDoctorLayout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateDoctor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAddDoctorLayout.setVerticalGroup(
            pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddDoctorLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblAddStaff1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDoctorFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDoctorMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(20, 20, 20)
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDoctorLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(pnlAddDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDoctorRate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btnCreateDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pnlCardLayout.add(pnlAddDoctor, "card10");

        pnlSpecialties.setBackground(new java.awt.Color(254, 251, 245));
        pnlSpecialties.setMaximumSize(new java.awt.Dimension(550, 550));
        pnlSpecialties.setMinimumSize(new java.awt.Dimension(550, 550));

        jLabel14.setText("Specialties");

        txtS2.setText("Specialties");

        btnDeleteDoctor1.setBackground(new java.awt.Color(114, 103, 194));
        btnDeleteDoctor1.setText("Delete Specialty");
        btnDeleteDoctor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctor1ActionPerformed(evt);
            }
        });

        tblSpecialties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Middle Name", "Last Name", "Specialty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSpecialties.getTableHeader().setReorderingAllowed(false);
        tblSpecialties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSpecialtiesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblSpecialties);
        if (tblSpecialties.getColumnModel().getColumnCount() > 0) {
            tblSpecialties.getColumnModel().getColumn(0).setResizable(false);
            tblSpecialties.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblSpecialties.getColumnModel().getColumn(1).setResizable(false);
            tblSpecialties.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblSpecialties.getColumnModel().getColumn(2).setResizable(false);
            tblSpecialties.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblSpecialties.getColumnModel().getColumn(3).setResizable(false);
            tblSpecialties.getColumnModel().getColumn(3).setPreferredWidth(50);
            tblSpecialties.getColumnModel().getColumn(4).setResizable(false);
        }

        tfS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfS1ActionPerformed(evt);
            }
        });

        tfS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfS2ActionPerformed(evt);
            }
        });

        txtS1.setText("Employee ID");

        btnAddSpecialties.setBackground(new java.awt.Color(114, 103, 194));
        btnAddSpecialties.setText("Add Specialty");
        btnAddSpecialties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSpecialtiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSpecialtiesLayout = new javax.swing.GroupLayout(pnlSpecialties);
        pnlSpecialties.setLayout(pnlSpecialtiesLayout);
        pnlSpecialtiesLayout.setHorizontalGroup(
            pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                                .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                                        .addComponent(btnAddSpecialties, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtS1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSpecialtiesLayout.createSequentialGroup()
                                        .addComponent(btnDeleteDoctor1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtS2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfS1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfS2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel14)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        pnlSpecialtiesLayout.setVerticalGroup(
            pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpecialtiesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel14)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSpecialties, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtS1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfS1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlSpecialtiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfS2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtS2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteDoctor1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(205, 205, 205))
        );

        pnlCardLayout.add(pnlSpecialties, "card11");

        pnlAddRoom.setBackground(new java.awt.Color(254, 251, 245));

        btnBacktoRoom.setText("Back");
        btnBacktoRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktoRoomActionPerformed(evt);
            }
        });

        lblAddRoom.setText("Add Room");

        jLabel2.setText("Room Number");

        jLabel8.setText("Capacity");

        btnCreateRoom.setText("Create Room");
        btnCreateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateRoomActionPerformed(evt);
            }
        });

        jLabel9.setText("Type");

        jLabel13.setText("Rate");

        javax.swing.GroupLayout pnlAddRoomLayout = new javax.swing.GroupLayout(pnlAddRoom);
        pnlAddRoom.setLayout(pnlAddRoomLayout);
        pnlAddRoomLayout.setHorizontalGroup(
            pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddRoomLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddRoomLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(lblAddRoom))
                    .addComponent(btnBacktoRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnCreateRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAddRoomLayout.createSequentialGroup()
                            .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfRoomNumber)
                                .addComponent(tfRoomType)
                                .addComponent(tfRoomCapacity)
                                .addComponent(tfRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(167, 167, 167))
        );
        pnlAddRoomLayout.setVerticalGroup(
            pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddRoomLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRoomCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnCreateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBacktoRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pnlCardLayout.add(pnlAddRoom, "card7");

        pnlChangePassword.setBackground(new java.awt.Color(254, 251, 245));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel18.setText("Change Password");

        jLabel16.setText("Enter Password:");

        jLabel19.setText("Enter New Password:");

        jLabel15.setText("Confirm New Password");

        pfConfirmPassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfConfirmPassword1btnChangeActionPerformed(evt);
            }
        });

        btnChange.setText("Change Password");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChangePasswordLayout = new javax.swing.GroupLayout(pnlChangePassword);
        pnlChangePassword.setLayout(pnlChangePasswordLayout);
        pnlChangePasswordLayout.setHorizontalGroup(
            pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
            .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlChangePasswordLayout.createSequentialGroup()
                    .addGap(137, 137, 137)
                    .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlChangePasswordLayout.createSequentialGroup()
                            .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(28, 28, 28)
                            .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pfNewPassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(pfConfirmPassword1)
                                .addComponent(pfEnterPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                        .addGroup(pnlChangePasswordLayout.createSequentialGroup()
                            .addGap(75, 75, 75)
                            .addComponent(btnChange))
                        .addGroup(pnlChangePasswordLayout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jLabel18)))
                    .addContainerGap(138, Short.MAX_VALUE)))
        );
        pnlChangePasswordLayout.setVerticalGroup(
            pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
            .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlChangePasswordLayout.createSequentialGroup()
                    .addGap(127, 127, 127)
                    .addComponent(jLabel18)
                    .addGap(56, 56, 56)
                    .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pfEnterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pfNewPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(pnlChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pfConfirmPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(53, 53, 53)
                    .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(128, Short.MAX_VALUE)))
        );

        pnlCardLayout.add(pnlChangePassword, "card9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 550, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 200, Short.MAX_VALUE)
                    .addComponent(pnlCardLayout, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlCardLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStaffActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card2");
    }//GEN-LAST:event_btnStaffActionPerformed

    private void btnRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card3");
    }//GEN-LAST:event_btnRoomActionPerformed

    private void btnDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card4");
    }//GEN-LAST:event_btnDoctorActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        Login login = new Login();
        login.show();
        this.dispose();
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnAddStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStaffActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card5");
    }//GEN-LAST:event_btnAddStaffActionPerformed

    private void btnDeleteStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStaffActionPerformed
        if(tfHidden1.isVisible()) {
            String employee_id = tfHidden1.getText();
            int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete staff with employee id: "+ employee_id +"?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
            if(result == JOptionPane.YES_OPTION) {
                if(con.deleteStaff(employee_id)) {
                    JOptionPane.showMessageDialog(null, "Staff with Employee ID: " + employee_id + " was deleted");
                    loadStaff();
                    tfHidden1.setText("");
                    tfHidden2.setText("");
                    tfHidden3.setText("");
                    tfHidden4.setText("");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteStaffActionPerformed

    private void btnCreateStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateStaffActionPerformed
        String employeeID = EmployeeIDGenerator.generateEmployeeID();
        String firstname = tfFirstName.getText();
        String middlename = tfMiddleName.getText();
        String lastname = tfLastName.getText();
        Staff staff = new Staff(employeeID, firstname, middlename, lastname, "00000000", "clerk");
        if(con.addStaff(staff)) {
            JOptionPane.showMessageDialog(null, "Created New Staff with Employee ID: " + employeeID);
            loadStaff();
            CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
            cardLayout.show(pnlCardLayout, "card2");
        } else {
            JOptionPane.showMessageDialog(null, "Was not able to create new staff", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateStaffActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card2");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card7");
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        if(tfHiddenR1.isVisible()) {
            try {
                int room_number = Integer.parseInt(tfHiddenR1.getText());
                int capacity = Integer.parseInt(tfHiddenR2.getText());
                String type = tfHiddenR3.getText();
                double rate = Double.parseDouble(tfHiddenR4.getText());
                if(rate < 0 || room_number < 0 || capacity < 0) {
                    throw new Exception("Room Number, Capacity and Rate cannot be negative");
                }
              
                Room r = new Room(room_number, capacity, type, rate);
                if(con.updateRoom(r)) {
                    JOptionPane.showMessageDialog(null, "Updated room number: " + room_number + "!");
                    loadRooms();
                }
            } catch(NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please enter a number on room_number, capacity, or rate", "Error", JOptionPane.ERROR_MESSAGE);
            } catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }   
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateRoomActionPerformed
    
    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoomActionPerformed
        if(tfHiddenR1.isVisible()) {
            try {
                int room_number = Integer.parseInt(tfHiddenR1.getText());
                if(room_number < 0) {
                    throw new Exception("Room Number cannot be negative");
                }
             
                if(con.deleteRoom(room_number)) {
                    JOptionPane.showMessageDialog(null, "Deleted room number: " + room_number + "!");
                    loadRooms();
                    tfHiddenR1.setText("");
                    tfHiddenR2.setText("");
                    tfHiddenR3.setText("");
                    tfHiddenR4.setText("");
                }
            } catch(NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please enter a number on room_number!", "Error", JOptionPane.ERROR_MESSAGE);
            } catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteRoomActionPerformed

    private void btnBacktoRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktoRoomActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card3");
    }//GEN-LAST:event_btnBacktoRoomActionPerformed

    private void btnCreateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateRoomActionPerformed
        int room_number = Integer.parseInt(tfRoomNumber.getText());
        String type = tfRoomType.getText();
        int capacity = Integer.parseInt(tfRoomCapacity.getText());
        double rate = Double.parseDouble(tfRoomRate.getText());
        try {
            if(rate < 0) {
                    throw new Exception("Room Number, Capacity and Rate cannot be negative");
            }
            Room room = new Room(room_number, capacity, type, rate);
            if(con.addRoom(room)) {
                loadRooms();
                JOptionPane.showMessageDialog(null, "Created New Room");
                CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
                cardLayout.show(pnlCardLayout, "card3");
            } else {
                JOptionPane.showMessageDialog(null, "Was not able to create a room", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            }
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Please Enter A Number on Room Number, Capacity and Rate", "Invalid Input", JOptionPane.ERROR_MESSAGE);
        } catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateRoomActionPerformed

    private void tblStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStaffMouseClicked
        int index = tblStaff.getSelectedRow();
        String employee_id = (String) tblStaff.getValueAt(index,0);
        String first_name = (String) tblStaff.getValueAt(index,1);
        String middle_name = (String) tblStaff.getValueAt(index,2);
        String last_name = (String) tblStaff.getValueAt(index,3);
        String role = (String) tblStaff.getValueAt(index,4);
        
        tfHidden1.setVisible(true);
        tfHidden2.setVisible(true);
        tfHidden3.setVisible(true);
        tfHidden4.setVisible(true);
        txtHidden1.setVisible(true);
        txtHidden2.setVisible(true);
        txtHidden3.setVisible(true);
        txtHidden4.setVisible(true);
        
        tfHidden1.setText(employee_id);
        tfHidden1.setEditable(false);
        tfHidden2.setText(first_name);
        tfHidden3.setText(middle_name);
        tfHidden4.setText(last_name);
    }//GEN-LAST:event_tblStaffMouseClicked

    private void btnResetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordActionPerformed
        if(tfHidden1.isVisible()) {
            String employee_id = tfHidden1.getText();
        
            int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to reset the password of staff with employee id: "+ employee_id +"?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
            if(result == JOptionPane.YES_OPTION) {
                
                Staff staff = new Staff();
                staff.setEmployeeID(employee_id);
                staff.setPassword(staff.encryptPassword("00000000"));
                if(con.changePassword(staff)){
                    JOptionPane.showMessageDialog(null, "Succesfully Reset Password");
                    con.updateIsNewToTrue(staff);
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnResetPasswordActionPerformed

    private void btnUpdateStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStaffActionPerformed
        if(tfHidden1.isVisible()) {
            String employee_id = tfHidden1.getText();
            String first_name = tfHidden2.getText();
            String middle_name = tfHidden3.getText();
            String last_name = tfHidden4.getText();
            Staff staff = new Staff();
            staff.setEmployeeID(employee_id);
            staff.setFirstname(first_name);
            staff.setMiddlename(middle_name);
            staff.setLastname(last_name);
            if(con.updateStaff(staff)) {
                JOptionPane.showMessageDialog(null, "Updated Staff with Employee ID: " + employee_id);
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateStaffActionPerformed

    private void btnDeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctorActionPerformed
        if(tfHiddenD1.isVisible()) {
            String employee_id = tfHiddenD1.getText();
            if(con.checkDoctorAssigned(employee_id)) {
                 int result = JOptionPane.showConfirmDialog(null, "Doctor still assigned to a patient. Are you sure you want to delete the doctor?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
                if(result == JOptionPane.YES_OPTION) {
                    if(con.deleteDoctor(employee_id)) {
                         JOptionPane.showMessageDialog(null, "Succesfully Deleted Doctor");
                         loadDoctors();
                         tfHiddenD1.setText("");
                         tfHiddenD2.setText("");
                         tfHiddenD3.setText("");
                         tfHiddenD4.setText("");
                         tfHiddenD5.setText("");
                    }
                }
            } else {
                if(con.deleteDoctor(employee_id)) {
                    JOptionPane.showMessageDialog(null, "Succesfully Deleted Doctor");
                    loadDoctors();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteDoctorActionPerformed

    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        int index = tblDoctor.getSelectedRow();
        String employee_id = (String) tblDoctor.getValueAt(index,0);
        String first_name = (String) tblDoctor.getValueAt(index,1);
        String middle_name = (String) tblDoctor.getValueAt(index,2);
        String last_name = (String) tblDoctor.getValueAt(index,3);
        String rate = (String) tblDoctor.getValueAt(index,4);
        
        tfHiddenD1.setVisible(true);
        tfHiddenD2.setVisible(true);
        tfHiddenD3.setVisible(true);
        tfHiddenD4.setVisible(true);
        tfHiddenD5.setVisible(true);
        txtHiddenD1.setVisible(true);
        txtHiddenD2.setVisible(true);
        txtHiddenD3.setVisible(true);
        txtHiddenD4.setVisible(true);
        txtHiddenD5.setVisible(true);
        tfHiddenD1.setText(employee_id);
        tfHiddenD1.setEditable(false);
        tfHiddenD2.setText(first_name);
        tfHiddenD3.setText(middle_name);
        tfHiddenD4.setText(last_name);
        tfHiddenD5.setText(rate);
    }//GEN-LAST:event_tblDoctorMouseClicked

    private void btnUpdateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDoctorActionPerformed
        if(tfHiddenD1.isVisible()) {
            String employee_id = tfHiddenD1.getText();
            String first_name = tfHiddenD2.getText();
            String middle_name = tfHiddenD3.getText();
            String last_name = tfHiddenD4.getText();
            Double rate;
            try {
                rate = Double.valueOf(tfHiddenD5.getText());
                if(rate < 0) {
                    throw new Exception("Rate cannot be negative.");
                }
            } catch(NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please Enter a number on Rate", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            
            Doctor doctor = new Doctor();
            doctor.setEmployeeID(employee_id);
            doctor.setFirstname(first_name);
            doctor.setMiddlename(middle_name);
            doctor.setLastname(last_name);
            doctor.setRate(rate);
            if(con.updateDoctor(doctor)) {
                JOptionPane.showMessageDialog(null, "Updated Doctor " + employee_id);
                loadDoctors();
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateDoctorActionPerformed

    private void btnAddDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDoctorActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card10");
    }//GEN-LAST:event_btnAddDoctorActionPerformed

    private void btnCreateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDoctorActionPerformed
        String employee_id = EmployeeIDGenerator.generateEmployeeID();
        String firstname = tfDoctorFirstName.getText();
        String middlename = tfDoctorMiddleName.getText();
        String lastname = tfDoctorLastName.getText();
              

        Doctor doctor = new Doctor();
        doctor.setEmployeeID(employee_id);
        doctor.setFirstname(firstname);
        doctor.setMiddlename(middlename);
        doctor.setLastname(lastname);

        try {
            Double rate = Double.valueOf(tfDoctorRate.getText()); 
            doctor.setRate(rate);
            if(rate < 0) {
                throw new Exception("Rate cannot be negative.");
            }
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Please Enter a number on Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(con.addDoctor(doctor)) {
            JOptionPane.showMessageDialog(null, "Created New Doctor!");
            loadDoctors();
            loadStaff();
        }
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card4");
    }//GEN-LAST:event_btnCreateDoctorActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card4");
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void tblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomMouseClicked
        int index = tblRoom.getSelectedRow();
        String room_number = (String) tblRoom.getValueAt(index,0);
        String capacity= (String) tblRoom.getValueAt(index,1);
        String type = (String) tblRoom.getValueAt(index,2);
        String rate = (String) tblRoom.getValueAt(index,3);
        
        tfHiddenR1.setVisible(true);
        tfHiddenR2.setVisible(true);
        tfHiddenR3.setVisible(true);
        tfHiddenR4.setVisible(true);
        txtHiddenR1.setVisible(true);
        txtHiddenR2.setVisible(true);
        txtHiddenR3.setVisible(true);
        txtHiddenR4.setVisible(true);
        tfHiddenR1.setText(room_number);
        tfHiddenR1.setEditable(false);
        tfHiddenR2.setText(capacity);
        tfHiddenR3.setText(type);
        tfHiddenR4.setText(rate);
    }//GEN-LAST:event_tblRoomMouseClicked

    private void tfHiddenR4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHiddenR4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHiddenR4ActionPerformed

    private void btnSpecialtiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpecialtiesActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card11");
        loadSpecialties();
    }//GEN-LAST:event_btnSpecialtiesActionPerformed

    private void btnDeleteDoctor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctor1ActionPerformed
        String employee_id = tfS1.getText();
        String specialty = tfS2.getText();
        if(con.deleteSpecialties(employee_id, specialty)) {
            loadSpecialties();
            tfS1.setText("");
            tfS2.setText("");
        }
    }//GEN-LAST:event_btnDeleteDoctor1ActionPerformed

    private void tblSpecialtiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSpecialtiesMouseClicked
        int index = tblSpecialties.getSelectedRow();
        String employee_id = (String) tblSpecialties.getValueAt(index,0);
        tfS1.setText(employee_id);
    }//GEN-LAST:event_tblSpecialtiesMouseClicked

    private void btnAddSpecialtiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSpecialtiesActionPerformed
        String employee_id = tfS1.getText();
        String specialty = tfS2.getText();
        if(con.addSpecialties(employee_id, specialty)) {
            loadSpecialties();
        }
    }//GEN-LAST:event_btnAddSpecialtiesActionPerformed

    private void tfS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfS1ActionPerformed
        if(tfS1.isVisible()) {
            String employee_id = tfS1.getText();
            if(con.checkDoctorAssigned(employee_id)) {
                 int result = JOptionPane.showConfirmDialog(null, "Doctor still assigned to a patient. Are you sure you want to delete the doctor?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
                if(result == JOptionPane.YES_OPTION) {
                    if(con.deleteDoctor(employee_id)) {
                         JOptionPane.showMessageDialog(null, "Succesfully Deleted Doctor");
                         loadDoctors();
                         tfHiddenR1.setText("");
                        tfHiddenR2.setText("");
                        tfHiddenR3.setText("");
                        tfHiddenR4.setText("");
                    }
                }
            } else {
                if(con.deleteDoctor(employee_id)) {
                    JOptionPane.showMessageDialog(null, "Succesfully Deleted Doctor");
                    loadDoctors();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Staff Selected", "No Staff Selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tfS1ActionPerformed

    private void tfS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfS2ActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
        cardLayout.show(pnlCardLayout, "card9");
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void pfConfirmPassword1btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfConfirmPassword1btnChangeActionPerformed
        String password = pfEnterPassword.getText();
        String newpassword = pfNewPassword1.getText();
        String confirm = pfConfirmPassword1.getText();

        if(newpassword.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password should atleast have 8 characters", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        password = staff.encryptPassword(password);
        if(staff.getPassword().equals(password)) {
            if(newpassword.equals(confirm)) {
                newpassword = staff.encryptPassword(newpassword);
                staff.setPassword(newpassword);
                if(con.changePassword(staff)) {
                    JOptionPane.showMessageDialog(null, "Password changed!");
                    CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
                    cardLayout.show(pnlCardLayout, "card");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Password does not match!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect Password!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pfConfirmPassword1btnChangeActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        String password = pfEnterPassword.getText();
        String newpassword = pfNewPassword1.getText();
        String confirm = pfConfirmPassword1.getText();

        if(newpassword.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password should atleast have 8 characters", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        password = staff.encryptPassword(password);
        if(staff.getPassword().equals(password)) {
            if(newpassword.equals(confirm)) {
                newpassword = staff.encryptPassword(newpassword);
                staff.setPassword(newpassword);
                if(con.changePassword(staff)) {
                    JOptionPane.showMessageDialog(null, "Password changed!");
                    CardLayout cardLayout = (CardLayout) pnlCardLayout.getLayout();
                    cardLayout.show(pnlCardLayout, "card2");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Password does not match!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect Password!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDoctor;
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnAddSpecialties;
    private javax.swing.JButton btnAddStaff;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBacktoRoom;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnCreateDoctor;
    private javax.swing.JButton btnCreateRoom;
    private javax.swing.JButton btnCreateStaff;
    private javax.swing.JButton btnDeleteDoctor;
    private javax.swing.JButton btnDeleteDoctor1;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnDeleteStaff;
    private javax.swing.JButton btnDoctor;
    private javax.swing.JButton btnResetPassword;
    private javax.swing.JButton btnRoom;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JButton btnSpecialties;
    private javax.swing.JButton btnStaff;
    private javax.swing.JButton btnUpdateDoctor;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JButton btnUpdateStaff;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAddRoom;
    private javax.swing.JLabel lblAddStaff;
    private javax.swing.JLabel lblAddStaff1;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JPasswordField pfConfirmPassword1;
    private javax.swing.JPasswordField pfEnterPassword;
    private javax.swing.JPasswordField pfNewPassword1;
    private javax.swing.JPanel pnlAddDoctor;
    private javax.swing.JPanel pnlAddRoom;
    private javax.swing.JPanel pnlAddStaff;
    private javax.swing.JPanel pnlCardLayout;
    private javax.swing.JPanel pnlChangePassword;
    private javax.swing.JPanel pnlDoctor;
    private javax.swing.JPanel pnlRoom;
    private javax.swing.JPanel pnlSpecialties;
    private javax.swing.JPanel pnlStaff;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTable tblSpecialties;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextField tfDoctorFirstName;
    private javax.swing.JTextField tfDoctorLastName;
    private javax.swing.JTextField tfDoctorMiddleName;
    private javax.swing.JTextField tfDoctorRate;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfHidden1;
    private javax.swing.JTextField tfHidden2;
    private javax.swing.JTextField tfHidden3;
    private javax.swing.JTextField tfHidden4;
    private javax.swing.JTextField tfHiddenD1;
    private javax.swing.JTextField tfHiddenD2;
    private javax.swing.JTextField tfHiddenD3;
    private javax.swing.JTextField tfHiddenD4;
    private javax.swing.JTextField tfHiddenD5;
    private javax.swing.JTextField tfHiddenR1;
    private javax.swing.JTextField tfHiddenR2;
    private javax.swing.JTextField tfHiddenR3;
    private javax.swing.JTextField tfHiddenR4;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfMiddleName;
    private javax.swing.JTextField tfRoomCapacity;
    private javax.swing.JTextField tfRoomNumber;
    private javax.swing.JTextField tfRoomRate;
    private javax.swing.JTextField tfRoomType;
    private javax.swing.JTextField tfS1;
    private javax.swing.JTextField tfS2;
    private javax.swing.JLabel txtHidden1;
    private javax.swing.JLabel txtHidden2;
    private javax.swing.JLabel txtHidden3;
    private javax.swing.JLabel txtHidden4;
    private javax.swing.JLabel txtHiddenD1;
    private javax.swing.JLabel txtHiddenD2;
    private javax.swing.JLabel txtHiddenD3;
    private javax.swing.JLabel txtHiddenD4;
    private javax.swing.JLabel txtHiddenD5;
    private javax.swing.JLabel txtHiddenR1;
    private javax.swing.JLabel txtHiddenR2;
    private javax.swing.JLabel txtHiddenR3;
    private javax.swing.JLabel txtHiddenR4;
    private javax.swing.JLabel txtS1;
    private javax.swing.JLabel txtS2;
    // End of variables declaration//GEN-END:variables
}
